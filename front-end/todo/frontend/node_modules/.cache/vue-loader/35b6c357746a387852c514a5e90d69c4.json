{"remainingRequest":"/home/rperandre/projetos-teste/projeto-todo/front-end/treinavue-basico/todo/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/rperandre/projetos-teste/projeto-todo/front-end/treinavue-basico/todo/frontend/src/views/TodoMaintenance.vue?vue&type=style&index=0&id=f798f5ba&scoped=true&lang=css&","dependencies":[{"path":"/home/rperandre/projetos-teste/projeto-todo/front-end/treinavue-basico/todo/frontend/src/views/TodoMaintenance.vue","mtime":1574442239243},{"path":"/home/rperandre/projetos-teste/projeto-todo/front-end/treinavue-basico/todo/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rperandre/projetos-teste/projeto-todo/front-end/treinavue-basico/todo/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/rperandre/projetos-teste/projeto-todo/front-end/treinavue-basico/todo/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/rperandre/projetos-teste/projeto-todo/front-end/treinavue-basico/todo/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rperandre/projetos-teste/projeto-todo/front-end/treinavue-basico/todo/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLm1haW50YWluLWNvbnRhaW5lciB7DQogICAgZGlzcGxheTogZ3JpZDsNCiAgICBib3JkZXI6IDFweCBzb2xpZCBsaWdodGdyYXk7DQogICAgYm9yZGVyLXJhZGl1czogNHB4Ow0KICAgIHBhZGRpbmc6IDIwcHg7DQp9DQoubWFpbnRhaW4tZm9ybSB7DQogICAgZGlzcGxheTogZ3JpZDsNCn0NCi5tYWludGFpbi1hY3Rpb25zIHsNCiAgICBkaXNwbGF5OiBmbGV4Ow0KICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7DQogICAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCiAgICBtYXJnaW4tdG9wOiAyMHB4Ow0KfQ0KLm1haW50YWluLWFjdGlvbnMgYnV0dG9uIHsNCiAgICB3aWR0aDogMTUwcHg7DQogICAgbWFyZ2luLWxlZnQ6IDEwcHg7DQp9DQo="},{"version":3,"sources":["TodoMaintenance.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TodoMaintenance.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <section class=\"maintain-container\">\r\n\r\n        <TodoMessage \r\n            :id=\"messageId\" \r\n        />\r\n\r\n        <TodoPageHeader \r\n            :title=\"title\" \r\n        />\r\n\r\n        <form @submit.prevent=\"saveTask\" class=\"maintain-form\">\r\n            <TodoInput \r\n                id=\"description\" \r\n                :value.sync=\"task.description\" \r\n                placeholder=\"Descrição\"\r\n            />\r\n\r\n            <div class=\"maintain-actions\">\r\n                <TodoButton \r\n                    label=\"Voltar\"\r\n                    @onClick=\"backToList\"\r\n                    icon=\"arrow-left\"\r\n                />\r\n\r\n                <TodoButton \r\n                    submit\r\n                    label=\"Confirmar\" \r\n                    icon=\"check\"\r\n                />                \r\n            </div>\r\n        </form>\r\n\r\n        <TodoModalConfirm \r\n            :id=\"idSaveConfirm\"\r\n            :title=\"title\"\r\n            :message=\"confirmMessage\"\r\n            labelOk=\"Sim\"\r\n            labelCancel=\"Não\"            \r\n            @onOk=\"confirmSaveTask\"\r\n        />\r\n\r\n    </section>\r\n</template>\r\n\r\n<script>\r\nimport TodoService from '@/services/todo-service.js';\r\nimport TodoPageHeader from '@/components/todo-page-header/TodoPageHeader';\r\nimport TodoInput from '@/components/todo-input/TodoInput';\r\nimport TodoMessageService from '@/components/todo-message/TodoMessageService';\r\nimport TodoModalConfirm from '@/components/todo-modal/TodoModalConfirm';\r\nimport TodoModalService from '@/components/todo-modal/TodoModalService';\r\n\r\nexport default {\r\n    components: { TodoPageHeader, TodoInput, TodoModalConfirm },\r\n    props: ['id'],\r\n    data() {\r\n        return {\r\n            task: {\r\n                description: ''\r\n            }\r\n        }\r\n    },\r\n    computed: {\r\n        title() {\r\n            return (!this.id ? 'Criar' : 'Alterar') + ' Task';\r\n        },\r\n        confirmMessage() {\r\n            return (this.id ? 'Deseja realmente alterar a task?' : 'Deseja realmente inserir a task?');\r\n        },\r\n        messageId() {\r\n            return 'todoInsertUpdate';\r\n        },\r\n        idSaveConfirm() {\r\n            return 'saveTaskConfirm'\r\n        }\r\n    },\r\n    methods: {\r\n        saveTask() {\r\n            TodoModalService.open(this.idSaveConfirm);\r\n        },\r\n        confirmSaveTask() {\r\n            if (!this.task.description) {\r\n                alert('Descrição não informada')\r\n                return;\r\n            }\r\n\r\n            if (!this.id) {\r\n                TodoService.create({\r\n                        description: this.task.description,\r\n                        done: false\r\n                    })\r\n                    .then(() => {\r\n                        this.task.description = '';\r\n                        TodoMessageService.success(this.messageId, 'Task criada com sucesso')\r\n                    })\r\n                    .catch(() => TodoMessageService.error(this.messageId, 'Erro ao inserir a task'));\r\n            } else {\r\n                TodoService.update({\r\n                    id: this.id,\r\n                    description: this.task.description,\r\n                    done: false                    \r\n                })\r\n                .then(() =>  TodoMessageService.success(this.messageId, 'Task alterada com sucesso'))\r\n                .catch(() => TodoMessageService.error(this.messageId, 'Erro ao alterar a task'));\r\n            }\r\n        },\r\n        backToList() {\r\n            this.$router.push({ name: 'todo-list'})\r\n        }\r\n    },\r\n    created() {\r\n        if (this.id) {\r\n            TodoService.find(this.id)\r\n                .then(task => this.task.description = task.description)\r\n                .catch(() => TodoMessageService.error(this.messageId, 'Erro ao carregar a task'));\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.maintain-container {\r\n    display: grid;\r\n    border: 1px solid lightgray;\r\n    border-radius: 4px;\r\n    padding: 20px;\r\n}\r\n.maintain-form {\r\n    display: grid;\r\n}\r\n.maintain-actions {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n    margin-top: 20px;\r\n}\r\n.maintain-actions button {\r\n    width: 150px;\r\n    margin-left: 10px;\r\n}\r\n</style>\r\n"]}]}